import itertools as it

top = 1000000

# eratostene sieve
nums = [True]*top
for i in range(2,top):
	for j in range(i*2,top, i):
		if nums[j]!=False: nums[j] = False

primes = list(filter(lambda x:nums[x], range(2,top)))
d = dict.fromkeys(primes, True)
print("got primes")

def euler(n, a,b):
	return n*n + a*n + b

def checkeuler(a,b):
	'''return a tuple (a, b, t) with t as number of primes generated by euler formula: n**2 + a*n + b'''
	r = list(it.takewhile(lambda x: d.get(euler(x, a, b)), range(top)))
	return a,b,len(r)

r = []
for a in range(1000):
	for b in range(1000):
		r.extend([checkeuler(a,b), checkeuler(-a,b), checkeuler(a,-b), checkeuler(-a,-b)])

r = sorted(r, key=lambda x: x[2], reverse=True)
print(r[0])
print(r[0][0]*r[0][1])

